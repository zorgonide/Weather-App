{"version":3,"sources":["components/weather_component.jsx","components/form_component.jsx","ParticleComponent.js","App.js","serviceWorker.js","index.js"],"names":["weather_component","props","className","city","id","weatherIcon","temp_celsius","in","transformProps","exitTransform","min","temp_min","max","temp_max","description","From","onSubmit","loadweather","error","role","type","placeholder","name","autoComplete","style","position","top","left","width","height","zIndex","params","App","getWeather","e","a","preventDefault","target","elements","value","country","apiCall","fetch","api_call","json","response","cod","setState","sys","main","weather","celsius","calCelsius","temp","get_WeatherIcon","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","icons","rangeId","this","ParticleComponent","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6bb66a98.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction weather_component(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"cards pt-4\" className=\"fade-in\">\r\n                <h1>{props.city}</h1>\r\n                <h5 className=\"py-4\">\r\n                    <i id=\"img\"className={`wi ${props.weatherIcon} display-1`}></i>\r\n                </h5>\r\n                {props.temp_celsius ? (<FadeTransform in transformProps={{exitTransform: 'scale(1) translateY(-50%)' }}><h1 className=\"py-2\">{props.temp_celsius}&deg;</h1></FadeTransform>) : null}\r\n                {props.temp_celsius ? minmaxTemp(props.temp_min, props.temp_max): null}\r\n                <h3 className=\"py-2\">{props.description}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction minmaxTemp(min, max){\r\n    return(\r\n        <FadeTransform in transformProps={{exitTransform: 'scale(1) translateX(-10%)' }}><h3>\r\n            <span className=\"py-4 px-2\">{min}&deg;</span><i><small>min</small></i>\r\n            <span className=\"py-4 px-2\">{max}&deg;</span><i><small>max</small></i>\r\n        </h3>\r\n        </FadeTransform>\r\n    )\r\n}\r\n\r\n\r\nexport default weather_component;\r\n\r\n","import React from 'react'\r\nimport \"./form_style.css\"\r\nfunction From(props) {\r\n  return (\r\n    <div className=\"container h-100\">\r\n      <form onSubmit={props.loadweather}>\r\n        <div>{props.error ? error() : \"\"}</div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 offset-md-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"City\"\r\n              name=\"city\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Country\"\r\n              name=\"country\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-md-0 mt-2 text-md-left \">\r\n            <button className=\"btn btn-outline btn-lg\">Get Weather</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction error(props) {\r\n  return (\r\n    <div className=\"alert alert-dark mx-5\" role=\"alert\">\r\n      Enter City and Country\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default From\r\n","import React from \"react\";\nimport Particles from \"react-particles-js\";\n\nexport default () => (\n  <div\n    style={{\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      zIndex:-1\n    }}\n  >\n    <Particles\n      params={{\n        \"particles\": {\n          \"number\": {\n            \"value\": 50,\n            \"density\": {\n              \"enable\": true,\n              \"value_area\": 1000\n            }\n          },\n          \"color\": {\n            \"value\": \"#ffffff\"\n          },\n          \"shape\": {\n            \"type\": \"circle\",\n            \"stroke\": {\n              \"width\": 0,\n              \"color\": \"#000000\"\n            },\n            \"polygon\": {\n              \"nb_sides\": 5\n            },\n            \"image\": {\n              \"src\": \"img/github.svg\",\n              \"width\": 100,\n              \"height\": 100\n            }\n          },\n          \"opacity\": {\n            \"value\": 0.5,\n            \"random\": false,\n            \"anim\": {\n              \"enable\": false,\n              \"speed\": 1,\n              \"opacity_min\": 0.1,\n              \"sync\": false\n            }\n          },\n          \"size\": {\n            \"value\": 3,\n            \"random\": true,\n            \"anim\": {\n              \"enable\": false,\n              \"speed\": 40,\n              \"size_min\": 0.1,\n              \"sync\": false\n            }\n          },\n          \"line_linked\": {\n            \"enable\": true,\n            \"distance\": 150,\n            \"color\": \"#ffffff\",\n            \"opacity\": 0.4,\n            \"width\": 1\n          },\n          \"move\": {\n            \"enable\": true,\n            \"speed\": 3,\n            \"direction\": \"none\",\n            \"random\": false,\n            \"straight\": false,\n            \"out_mode\": \"out\",\n            \"bounce\": false,\n            \"attract\": {\n              \"enable\": false,\n              \"rotateX\": 600,\n              \"rotateY\": 1200\n            }\n          }\n        },\n        \"interactivity\": {\n          \"detect_on\": \"canvas\",\n          \"events\": {\n            \"onhover\": {\n              \"enable\": false,\n              \"mode\": \"repulse\"\n            },\n            \"onclick\": {\n              \"enable\": true,\n              \"mode\": \"push\"\n            },\n            \"resize\": true\n          },\n          \"modes\": {\n            \"grab\": {\n              \"distance\": 400,\n              \"line_linked\": {\n                \"opacity\": 1\n              }\n            },\n            \"bubble\": {\n              \"distance\": 400,\n              \"size\": 40,\n              \"duration\": 2,\n              \"opacity\": 8,\n              \"speed\": 3\n            },\n            \"repulse\": {\n              \"distance\": 200,\n              \"duration\": 0.4\n            },\n            \"push\": {\n              \"particles_nb\": 4\n            },\n            \"remove\": {\n              \"particles_nb\": 2\n            }\n          }\n        },\n        \"retina_detect\": true\n      }}\n    />\n  </div>\n);\n","import React, { Component ,setState } from 'react'\nimport './App.css';\nimport Weather from \"./components/weather_component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"weather-icons/css/weather-icons.css\"\nimport Form from \"./components/form_component\"\nimport ParticleComponent from \"./ParticleComponent\";\nimport { FadeTransform } from 'react-animation-components';\nconst apikey = \"184080a27b2ff2aa447f712e151d8f52\";\n\nexport class App extends Component {\n  constructor(){\n    super();\n    this.state ={\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: null,\n      temp_min: null,\n      description: \"\",\n      error: false\n    };\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icon: icons.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: icons.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icon: icons.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: icons.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: icons.Atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: icons.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: icons.Clouds });\n        break;\n      default:\n        this.setState({ icon: icons.Clouds });\n    }\n  }\n  getWeather = async(e) => {\n\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n\n    let apiCall = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${apikey}`;\n    if (city && country) {\n      const api_call = await fetch(apiCall);\n      const response = await api_call.json();\n      if (response.cod == \"404\")\n      {\n        this.setState({\n          error:true\n        })\n      }else{\n        this.setState(\n          {\n            city: `${response.name}, ${response.sys.country}`,\n            main: response.weather[0].main,\n            celsius: this.calCelsius(response.main.temp),\n            temp_max: this.calCelsius(response.main.temp_max),\n            temp_min: this.calCelsius(response.main.temp_min),\n            description: response.weather[0].main,\n            error: false,\n          })\n      \n          this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n      }\n    }\n    else{\n      this.setState({\n        error:true\n      })\n    }\n    \n  }\n  \n  render() {\n    return (\n      <div className=\"App\" >\n        <ParticleComponent />\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            zIndex:-10\n          }}\n        ></div>\n        <FadeTransform\n        in\n        transformProps={{\n            exitTransform: 'scale(0.5) translateY(-50%)'\n        }}>\n          <Form loadweather = {this.getWeather} error = {this.state.error}/>\n        </FadeTransform>\n\n          <Weather \n          city={this.state.city} \n          country={this.state.country}\n          weatherIcon={this.state.icon}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}/>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}